refresh_rate: 30 seconds
appenders:
  # An appender named "stdout" that writes to stdout
  stdout:
    kind: console
    encoder:
      pattern: "{d(%Y-%m-%dT%H:%M:%S%Z)} {h({l}):5} {t} {m}{n}"
    filters:
      - kind: threshold
        level: info

  # An appender named "p2pool" that writes to a file with a custom pattern encoder
  p2pool:
    kind: rolling_file
    path: "{{log_dir}}/log/p2pool.log"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "{{log_dir}}/log/p2pool.{}.log"
    encoder:
      pattern: "[{d(%Y-%m-%d %H:%M:%S.%f)} [{t}] {l:5} {m} // {f}:{L}{n}"

    # An appender named "other" that writes to a file with a custom pattern encoder
  other:
    kind: rolling_file
    path: "{{log_dir}}/log/other.log"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "{{log_dir}}/log/other.{}.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S.%f)} {l:5} {m} // {f}:{L}{n}"
    filters:
      - kind: threshold
        level: info

  p2p:
    kind: rolling_file
    path: "{{log_dir}}/log/p2p.log"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "{{log_dir}}/log/p2p.{}.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S.%f)} {l:5} {m} // {f}:{L}{n}"
    filters:
      - kind: threshold
        level: info

  message_logging:
    kind: rolling_file
    path: "{{log_dir}}/log/messages.log"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "{{log_dir}}/log/messages.{}.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S.%f)} {l:5} {m} // {f}:{L}{n}"

# Set the default logging level to "warn" and attach the "stdout" appender to the root
root:
  level: info
  appenders:
    - stdout
    - other

loggers:
  tari::p2pool:
    level: info
    appenders:
      - p2pool
      - stdout
    additive: false
  tari::p2pool::server::p2p:
    level: info
    appenders:
      - p2p
      - stdout
    additive: false
  # For debugging only
  # tari::p2pool::message_logging:
  #   level: debug
  #   appenders:
  #     - message_logging
  #   additive: false
